#!/usr/bin/env python3

import bottle
import os
import subprocess
import sys
import threading

EMAIL = None

aliases = '/etc/mail/aliases'
try:
  with open(aliases) as f:
    for line in f:
      if 'root:' in line:
        EMAIL = line.split(':')[1].strip()
except Exception:
  pass

if EMAIL is None:
  print('{}: define an alias for root in {}'.format(
    sys.argv[0], aliases),
        file = sys.stderr)
  exit(1)

def run(cmd):
  print('{}: running {}'.format(sys.argv[0], ' '.join(cmd)))
  subprocess.check_call(cmd)

run(['crond'])

lock = threading.Lock()

@bottle.error(404)
def not_found(error):
  return None

@bottle.route('/.well-known')
def beacon():
  return None

@bottle.route('/.well-known/<path:path>')
def challenges(path):
  return bottle.static_file(path, root = '/var/www/letsencrypt/.well-known')

@bottle.route('/.well-known/<path:path>')
def challenges(path):
  return bottle.static_file(path, root = '/var/www/letsencrypt/.well-known')

@bottle.route('/<hostname>/<file>.pem')
def get(hostname, file):
  with lock: # FIXME: lock per certificate
    root = '/etc/letsencrypt/live'
    if file not in ['fullchain', 'privkey']:
      raise bottle.HTTPError(status = 404)
    if not os.path.exists('{}/{}/{}.pem'.format(root, hostname, file)):
      run([
        'certbot', 'certonly',
        '--webroot', '-w', '/var/www/letsencrypt', '-d', hostname,
        '--non-interactive', '--agree-tos', '--email', EMAIL,
      ])
    return bottle.static_file(
      '{}/{}.pem'.format(hostname, file), root = root)

from cheroot.wsgi import WSGIServer

server = WSGIServer(
    ('0.0.0.0', 80),
    bottle.default_app(),
    server_name='certbot',
    numthreads=64)

try:
  server.start()
except KeyboardInterrupt:
  server.stop()
