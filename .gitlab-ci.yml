stages:
  - Check
  - Containerize
  - Deploy

before_script:
  - TAG=$(git describe)
  - docker --config "$PWD/.docker" login -u gitlab-ci-token -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
  - docker --config "$PWD/.docker" login -u mefyl -p "$DOCKER_HUB_TOKEN"

Check:
  stage: Check
  image: registry.gitlab.gruntech.org/mefyl/sself/ci
  script:
    - make check

Load Balancer:
  stage: Containerize
  image: registry.gitlab.gruntech.org/mefyl/sself/ci
  script:
    - IMAGE="$CI_REGISTRY/mefyl/sself/lb"
    - NAME="$IMAGE:$TAG"
    - make DOCKER_REPOSITORY=registry.gitlab.gruntech.org/mefyl/sself/ DOCKER_TAG=$TAG image/lb
    - if ! docker --config "$PWD/.docker" push "$NAME"; then docker rmi "$NAME"; exit 1; fi
    - DOCKER_NAME="mefyl/sself-lb:$TAG"
    - docker tag "$NAME" "$DOCKER_NAME"
    - docker rmi "$NAME"
    - if ! docker --config "$PWD/.docker" push "$DOCKER_NAME"; then docker rmi "DOCKER_$NAME"; exit 1; fi
    - docker rmi "$DOCKER_NAME"

Certbot:
  stage: Containerize
  image: registry.gitlab.gruntech.org/mefyl/sself/ci
  script:
    - IMAGE="$CI_REGISTRY/mefyl/sself/certbot"
    - NAME="$IMAGE:$TAG"
    - make DOCKER_REPOSITORY=registry.gitlab.gruntech.org/mefyl/sself/ DOCKER_TAG=$TAG image/certbot
    - if ! docker --config "$PWD/.docker" push "$NAME"; then docker rmi "$NAME"; exit 1; fi
    - DOCKER_NAME="mefyl/sself-certbot:$TAG"
    - docker tag "$NAME" "$DOCKER_NAME"
    - docker rmi "$NAME"
    - if ! docker --config "$PWD/.docker" push "$DOCKER_NAME"; then docker rmi "DOCKER_$NAME"; exit 1; fi
    - docker rmi "$DOCKER_NAME"


Deploy to production:
  stage: Deploy
  image: registry.gitlab.gruntech.org/mefyl/sself/ci
  dependencies:
    - Certbot
    - Load Balancer
  script:
    - export DOCKER_CONFIG="$PWD/.docker"
    - mkdir -p "$DOCKER_CONFIG"
    - echo "$DOCKER_CERTS" | base64 -d | tar xvz -C "$DOCKER_CONFIG"
    - export DOCKER_TLS_VERIFY=1
    - export DOCKER_CERT_PATH="$DOCKER_CONFIG"
    - export DOCKER_HOST=157.230.19.225:2376
    - TAG=$(git describe)
    - sed "s/:latest/:$TAG/" stack.yml > sself.yml
    - docker stack deploy  --with-registry-auth -c sself.yml sself
  artifacts:
    name: "${CI_JOB_STAGE}_${CI_COMMIT_REF_NAME}"
    paths:
      - sself.yml
  environment:
    name: production
    url: http://production.gruntech.org
  only:
    - master
  when: manual
